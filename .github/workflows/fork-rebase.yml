# This is intended to keep forks up to date with the upstream repository

name: Fork rebase with upstream

on:
  schedule:
    - cron: '0 0 * * *'

jobs:
  rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream and fetch latest changes
        run: |
          git remote add upstream https://github.com/manufacturist/community-bulletin-board.git
          git fetch upstream

      - name: Check if rebase is needed
        id: check
        run: |
          git checkout master
          UPSTREAM_HASH=$(git rev-parse upstream/master)
          CURRENT_HASH=$(git rev-parse master)

          if [ "$UPSTREAM_HASH" = "$CURRENT_HASH" ]; then
            echo "Rebase not needed. Up-to-date with upstream."
            echo "skip_rebase=true" >> $GITHUB_ENV
          else
            echo "Rebase needed."
            echo "skip_rebase=false" >> $GITHUB_ENV
          fi

      - name: Rebase master branch onto upstream/master
        if: steps.check.outputs.skip_rebase == 'false'
        run: |
          git rebase upstream/master || (git rebase --abort && echo "Rebase failed! Check conflicts." && exit 1)

      - name: Force push rebased master to fork
        if: steps.check.outputs.skip_rebase == 'false'
        run: |
          git push origin master --force-with-lease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}